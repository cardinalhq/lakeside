name: z- Docker build and push a Go project to ecr

on:
  workflow_call:
    inputs:
      tag-to-release:
        type: string
        required: true
      registry:
        type: string
        required: true
      repository:
        type: string
        required: true
      should-tag-latest:
        type: string
        required: true
      go-version:
        type: string
        required: true
      should-use-public-ecr:
        description: 'Push to public ECR (false=private)'
        type: string
        default: "true"
      docker-context:
        description: 'path to dockerfile directory'
        type: string
        default: "."

    secrets:
      ECR_ACCOUNT_ID:
        required: true
      ECR_ROLE_NAME:
        required: true
      ECR_REGISTRY_REGION:
        required: true

env:
  PRIVATE_IMAGE_REGISTRY: ${{ secrets.ECR_ACCOUNT_ID }}.dkr.ecr.${{ secrets.ECR_REGISTRY_REGION }}.amazonaws.com/
  IMAGE_REGISTRY: ""

jobs:

  build-and-push-to-ecr:
    runs-on:
      group: larger-runners
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Set public ECR if enabled
        if: ${{ inputs.should-use-public-ecr == 'true' }}
        run: |
          echo "IMAGE_REGISTRY=${{ inputs.registry }}" >> $GITHUB_ENV


      - name: Set private ECR if disabled
        if: ${{ inputs.should-use-public-ecr != 'true' }}
        run: |
          echo "IMAGE_REGISTRY=${{ env.PRIVATE_IMAGE_REGISTRY }}" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ inputs.tag-to-release }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}
          cache-dependency-path: "**/*.sum"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::${{ secrets.ECR_ACCOUNT_ID }}:role/${{ secrets.ECR_ROLE_NAME }}
          aws-region: ${{ secrets.ECR_REGISTRY_REGION }}
          role-session-name: GitHubActions

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to PUBLIC Amazon ECR
        if: ${{ inputs.should-use-public-ecr == 'true' }}
        env:
          AWS_REGION: us-east-1
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Login to PRIVATE Amazon ECR
        if: ${{ inputs.should-use-public-ecr != 'true' }}
        id: login-ecr-private
        uses: aws-actions/amazon-ecr-login@v2


      - name: Build and push (latest)
        if: ${{ inputs.should-tag-latest == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.docker-context }}
          push: true
          build-args: |
            GIT_BRANCH=${{ inputs.tag-to-release }}
            BUILDER_REPO=${{ env.IMAGE_REGISTRY }}${{ inputs.repository }}
          tags: |
            ${{ env.IMAGE_REGISTRY }}${{ inputs.repository }}:latest
            ${{ env.IMAGE_REGISTRY }}${{ inputs.repository }}:${{ inputs.tag-to-release }}

      - name: Build and push
        if: ${{ inputs.should-tag-latest != 'true' }}
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          build-args: |
            GIT_BRANCH=${{ inputs.tag-to-release }}
            BUILDER_REPO=${{ env.IMAGE_REGISTRY }}${{ inputs.repository }}
          tags: |
            ${{ env.IMAGE_REGISTRY }}${{ inputs.repository }}:${{ inputs.tag-to-release }}
